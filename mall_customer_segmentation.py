# -*- coding: utf-8 -*-
"""Mall_customer_segmentation

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/16nvtvo4SiKxsn-SPOks913yknANtPrze
"""

# library(ggplot2); theme_set(theme_bw())
# library(dplyr)
# library(skmeans)
# library(gridExtra)

import numpy as np
import pandas as pd
import seaborn as sns
import matplotlib.pyplot as plt

pip install numpy

pip install scipy

pip install spherecluster

# from sklearn.cluster import MultiviewSphericalKMeans
# from sklearn.manifold import TSNE
# from sklearn.metrics import normalized_mutual_info_score as nmi_score
import warnings
warnings.simplefilter('ignore')

pip install gridExtra

from google.colab import files
uploaded = files.upload()

customers = pd.read_csv("Mall_Customers.csv")
# attach(customers)
customers.head()

customers.shape

for col in customers.columns:
  print(col)

customers['CustomerID'].nunique()

female=customers.loc[customers['Gender'] == 'Female']
# print(female)
female.shape
f_count=female.shape[0]
print(f_count)

male=customers.loc[customers['Gender'] == 'Male']
# print(male)
male.shape
m_count=male.shape[0]
print(m_count)

total_customers=customers.shape[0]
print(total_customers)

noc = [f_count,m_count]

f_percent=(f_count/total_customers)*100
m_percent=(m_count/total_customers)*100
percentage = [f_percent,m_percent]

for p in percentage:
  print(p)

# df_gender = customers.groupby('Gender')[['CustomerID']].count().reset_index().rename(columns={'CustomerID': 'count'})
# plt.figure(figsize=(8,8))
# colors_list = ['Pink', 'lightblue']
# sns.barplot(x='Gender', y='count', data=df_gender, palette = colors_list)
# plt.title('Gender distribution')
# # plt.text((,
# #              str(Percentage[i])+'%',
# #              ha='center',
# #              weight='bold')
# plt.show()

df_gender = customers.groupby('Gender')[['CustomerID']].count().reset_index().rename(columns={'CustomerID': 'Freq'})
plt.figure(figsize=(5,5))
colors_list = ['Pink', 'lightblue']
ax=sns.barplot(x='Gender', y='Freq', data=df_gender, palette = colors_list)
patches = ax.patches
for i in range(len(patches)):
   x = patches[i].get_x() + patches[i].get_width()/2
   y = patches[i].get_height()+.05
   ax.annotate('{:.1f}%'.format(percentage[i]), (x, y), ha='center')
plt.title('Gender distribution')
plt.show()

pip install dfply

pip install ggplot

pip install tslib

from plotnine import *
plot = ggplot(aes(x='Age',fill='Gender'), customers) + geom_density(alpha=0.4)
print(plot)

customers.Age.describe()

# plt.figure(figsize=(8,8))
# df = pd.DataFrame([customers.Age]).transpose()
# plt.boxplot(df['Age'])
# plt.ylabel('Age')
# plt.show()

plt.figure(figsize=(5,5))
# import seaborn as sns
df = pd.DataFrame([customers.Age]).transpose()
sns.boxplot(df['Age'],color='lightgreen')
# plt.figure(figsize(8,8))

df1 = customers.iloc[: , [-2]].copy()
df2 = customers.iloc[: , [-1]].copy()

plt.subplot(1, 2, 1)
p1 = sns.boxplot(data=df1, y='Annual Income (k$)', color='blue')
plt.show()

plt.subplot(1, 2, 2)
p2 = sns.boxplot(data=df2, y='Spending Score (1-100)', color='orange')
plt.show()

print("There are", customers.isna().sum().sum(), "N/A values.")

Kdata = customers.iloc[:, [3, 4]]

from sklearn.cluster import KMeans

tot_withinss = np.zeros(10)
for i in range(1, 11):
    kDet = KMeans(n_clusters=i).fit(Kdata)
    tot_withinss[i-1] = kDet.inertia_

plt.plot(range(1, 11), tot_withinss, '-o', color='orange')
plt.xlabel('Number of Clusters')
plt.ylabel('Within-cluster Sum of Squares')
plt.title('Elbow K Estimation')
plt.figure(figsize=(10,10))
plt.show()

# sns.set(style="whitegrid")
# sns.scatterplot(data=Kdata, x='Annual Income (k$)', y='Spending Score (1-100)', s=50, palette=['red','orange','green','blue','pink'])
# plt.title("Mall Customer Segments: K-means Clustering")
# plt.show()

kmeans = KMeans(n_clusters=5)

# fit the KMeans model to Kdata
kmeans.fit(Kdata)

# get the cluster labels
cluster_labels = kmeans.labels_ + 1

# create scatter plot
sns.scatterplot(x='Annual Income (k$)', y='Spending Score (1-100)', data=Kdata, hue=cluster_labels, palette=["red","orange","green","blue","magenta"])

# set chart title and axis labels
plt.title('Mall Customer Segments: K-means Clustering')
plt.xlabel('Annual Income')
plt.ylabel('Spending Score')

# show the plot
plt.show()